# GCJ2019_1B_b.py でハマったところの検証
# ビットシフトは加減算よりも優先順位が低いので、 + が先に計算されてしまうのが問題だった

q1=q2=q3=q4=q5=q6=99

ans56 = q1*(2**56)+q2*(2**28)+q3*(2**18)+q4*(2**14)+q5*(2**11)+q6*(2**9)
bit_mask = 0b1111111

r1 = ans56 >> 56
r2 = (ans56 >> 28) & bit_mask
r3_1 = ((ans56 - (q4<<14 + q5<<11 + q6<<9))>>18) & bit_mask #これだとダメ
r3_2 = ((ans56 - (q4*(2**14) + q5*(2**11) + q6*(2**9)))>>18) & bit_mask #これだとOK

print("{}".format(r3_1) )
print("{}".format(r3_2) )

print(q4<<14 + q5<<11)
print(q4<< (14 + q5) <<11) #このように解釈されてしまう

print((q4<<14) + (q5<<11)) #意図通りに解釈してほしかったらカッコをつける
print(q4*(2**14) + q5*(2**11))

print("\n\n")


a = 3
b = 5
x1 = a << 8 + b << 4
print("x1={}".format(x1))

x2 = (a << 8) + (b << 4)
print("x2={}".format(x2))

x3 = a * 2 ** 8 + b * 2 ** 4
print("x3={}".format(x3))
